#BlueJ class context
comment0.target=Player
comment0.text=\n\ Class\ Player\ -\ the\ virus\ which\ is\ the\ user\n\n\ This\ class\ creates\ the\ player\ object\ and\ returns\ attributes\ of\ the\ player\ \n\ which\ includes\ the\ total\ weight\ the\ player\ is\ carrying\ and\ the\ limit\ that\ the\ \n\ player\ can\ carry.\ You\ can\ add\ to\ and\ get\ items\ from\ the\ player's\ inventory.\n\ \n\ Also,\ you\ access\ methods\ that\ allow\ the\ player\ to\ commit\ actions\ in\ this\n\ game,\ for\ example\ to\ drop\ an\ item\ or\ to\ go\ to\ a\ room.\n\ \n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\ and\ Kim-Anh\ Vu\ \n\ @version\ 2017.12.08\n
comment1.params=currentRoom\ game
comment1.target=Player(Room,\ Game)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Player\n
comment10.params=
comment10.target=void\ getInventory()
comment10.text=\n\ If\ user\ inputs\ 'inventory',\ list\ of\ all\ the\ items\ that\ have\ been\n\ picked\ up\ is\ printed\ out.\n
comment11.params=command
comment11.target=void\ dropItem(Command)
comment11.text=\n\ If\ user\ inputs\ 'drop',\ item\ is\ removed\ from\ inventory\ and\ is\ \n\ placed\ in\ current\ room.\ If\ second\ word\ is\ not\ recognised,\ error\n\ statement\ is\ printed.\n
comment12.params=command
comment12.target=void\ toAttack(Command)
comment12.text=\n\ If\ user\ picks\ up\ correct\ items,\ then\ are\ able\ to\ attack\ cells.\n\ Otherwise,\ error\ message\ is\ printed.\n
comment13.params=
comment13.target=void\ toWin()
comment13.text=\n\ After\ every\ time\ goBack\ method\ is\ initialised,\ program\ checks\n\ if\ all\ cells\ have\ been\ destroyed.\ If\ they\ are,\ user\ wins.\n
comment2.params=
comment2.target=int\ getWeightCarried()
comment2.text=\n\ returns\ the\ weight\ carried\ by\ the\ user(virus).\n
comment3.params=
comment3.target=int\ getWeightLimit()
comment3.text=\n\ returns\ the\ weight\ limit\ that\ can\ be\ carried\ by\ the\ user(virus).\n
comment4.params=name\ item
comment4.target=void\ addItem(java.lang.String,\ Item)
comment4.text=\n\ Adds\ to\ their\ user's\ inventory\ whenever\ they\ pick\ up\ item.\n
comment5.params=string
comment5.target=Item\ getItem(java.lang.String)
comment5.text=\n\ Returns\ name\ of\ item\ in\ the\ inventory.\n
comment6.params=command
comment6.target=void\ pickUpItems(Command)
comment6.text=\n\ Given\ a\ command\ that\ consists\ of\ 'pick'\ and\ 'up'\ in\ order\ to\ pick\ up\ items,\n\ it\ is\ processed.\n\ Result\ is\ dependent\ on\ third\ word\ of\ command.\n
comment7.params=command
comment7.target=void\ goRoom(Command)
comment7.text=\ \n\ Try\ to\ go\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\n\ body\ part,\ otherwise\ print\ an\ error\ message.\ If\ land\ in\ the\n\ stomach,\ then\ the\ game\ is\ over.\n
comment8.params=
comment8.target=void\ goBack()
comment8.text=\ \n\ Allows\ user\ to\ travel\ to\ previous\ sections\ of\ the\ body\ that\ \n\ they've\ been\ in.\n
comment9.params=
comment9.target=void\ toTeleport()
comment9.text=\n\ When\ the\ user\ lands\ in\ body\ part\ called\ 'teleport',\ it\ is\ randomly\n\ transported\ to\ another\ place\ in\ the\ body.\n
numComments=14
